```python
import tkinter as tk
import random

def get_ai_choice():
    """A simple AI that randomly selects Rock, Paper, or Scissors."""
    return random.choice(['Rock', 'Paper', 'Scissors'])

def determine_winner(player_choice, ai_choice):
    """Core game logic to determine the winner based on player and AI choices."""
    if player_choice == ai_choice:
        return 'Draw'
    elif (player_choice == 'Rock' and ai_choice == 'Scissors') or \
         (player_choice == 'Paper' and ai_choice == 'Rock') or \
         (player_choice == 'Scissors' and ai_choice == 'Paper'):
        return 'You Win'
    else:
        return 'You Lose'

class RockPaperScissors:
    def __init__(self, master):
        self.master = master
        master.title('Rock-Paper-Scissors')

        self.player_choice = None
        self.ai_choice = None
        self.result = None

        self.label = tk.Label(master, text='Choose Rock, Paper, or Scissors:', font=('Arial', 14))
        self.label.pack()

        self.rock_button = tk.Button(master, text='Rock', command=lambda: self.play('Rock'), font=('Arial', 12))
        self.rock_button.pack(pady=5)

        self.paper_button = tk.Button(master, text='Paper', command=lambda: self.play('Paper'), font=('Arial', 12))
        self.paper_button.pack(pady=5)

        self.scissors_button = tk.Button(master, text='Scissors', command=lambda: self.play('Scissors'), font=('Arial', 12))
        self.scissors_button.pack(pady=5)

        self.result_label = tk.Label(master, text='', font=('Arial', 14))
        self.result_label.pack(pady=20)

    def play(self, player_choice):
        self.player_choice = player_choice
        self.ai_choice = get_ai_choice()
        self.result = determine_winner(self.player_choice, self.ai_choice)
        self.display_result()

    def display_result(self):
        self.result_label.config(text=f'You chose: {self.player_choice}\nAI chose: {self.ai_choice}\nResult: {self.result}')

if __name__ == '__main__':
    root = tk.Tk()
    game = RockPaperScissors(root)
    root.mainloop()
```

### Testing Cases
Here are the testing cases to ensure the functionality of the game:

1. **Input:** Rock
   - **Expected Output:** Displays player's choice as Rock, AI's choice, and the result.

2. **Input:** Paper
   - **Expected Output:** Displays player's choice as Paper, AI's choice, and the result.

3. **Input:** Scissors
   - **Expected Output:** Displays player's choice as Scissors, AI's choice, and the result.

### Deployment Requirements
To prepare the game for deployment, ensure the following:

- **Requirements:**
  - Python 3.x installed
  - tkinter library available
  - Executable script ready for distribution
```